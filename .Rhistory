arm1.tmp34.v2<-data.frame(site=site.loop, t(rep(NA, 5)))}
names(arm1.tmp34.v2)<-c("Site", "Subject_ID", "Arm", "Timepoint", "Result.numeric", "extreme.outlier")
tmp<-data.tmp[data.tmp$Arm==2 & data.tmp$Timepoint=="12 Weeks",]
outliers.arm2.12weeks<-boxplot.stats(tmp$Result.numeric, coef=1.5)$out
outliers.arm2.12weeks.ext<-boxplot.stats(tmp$Result.numeric, coef=3)$out
arm2.tmp12<-tmp[tmp$Result.numeric %in% outliers.arm2.12weeks,c("Subject_ID", "Arm", "Timepoint", "Result.numeric")]
arm2.tmp12$extreme.outlier<-ifelse(outliers.arm2.12weeks %in% outliers.arm2.12weeks.ext,T,F)
if(nrow(arm2.tmp12)!=0){
arm2.tmp12.v2<-data.frame(site=site.loop, arm2.tmp12)
##print(arm2.tmp12.v2)
}
if(nrow(arm2.tmp12)==0){
arm2.tmp12.v2<-data.frame(site=site.loop, t(rep(NA, 5)))}
names(arm2.tmp12.v2)<-c("Site", "Subject_ID", "Arm", "Timepoint", "Result.numeric", "extreme.outlier")
tmp<-data.tmp[data.tmp$Arm==2 & data.tmp$Timepoint=="34 Weeks",]
outliers.arm2.34weeks<-boxplot.stats(tmp$Result.numeric, coef=1.5)$out
outliers.arm2.34weeks.ext<-boxplot.stats(tmp$Result.numeric, coef=3)$out
arm2.tmp34<-tmp[tmp$Result.numeric %in% outliers.arm2.34weeks,c("Subject_ID", "Arm", "Timepoint", "Result.numeric")]
arm2.tmp34$extreme.outlier<-ifelse(outliers.arm2.34weeks %in% outliers.arm2.34weeks.ext,T,F)
if(nrow(arm2.tmp34)!=0){
arm2.tmp34.v2<-data.frame(site=site.loop, arm2.tmp34)
##print(arm2.tmp34.v2)
}
if(nrow(arm2.tmp34)==0){
arm2.tmp34.v2<-data.frame(site=site.loop, t(rep(NA, 5)))}
names(arm2.tmp34.v2)<-c("Site", "Subject_ID", "Arm", "Timepoint", "Result.numeric", "extreme.outlier")
tmp<-data.tmp[data.tmp$Arm==3 & data.tmp$Timepoint=="34 Weeks",]
outliers.arm3.34weeks<-boxplot.stats(tmp$Result.numeric, coef=1.5)$out
outliers.arm3.34weeks.ext<-boxplot.stats(tmp$Result.numeric, coef=3)$out
arm3.tmp34<-tmp[tmp$Result.numeric %in% outliers.arm3.34weeks,c("Subject_ID", "Arm", "Timepoint", "Result.numeric")]
arm3.tmp34$extreme.outlier<-ifelse(outliers.arm3.34weeks %in% outliers.arm3.34weeks.ext,T,F)
if(nrow(arm3.tmp34)!=0){
arm3.tmp34.v2<-data.frame(site=site.loop, arm3.tmp34)
##print(arm3.tmp34.v2)
}
if(nrow(arm3.tmp34)==0){
arm3.tmp34.v2<-data.frame(site=site.loop, t(rep(NA, 5)))}
names(arm3.tmp34.v2)<-c("Site", "Subject_ID", "Arm", "Timepoint", "Result.numeric", "extreme.outlier")
outliers.a<-rbind(outliers, arm1.tmp12.v2, arm1.tmp34.v2, arm2.tmp12.v2, arm2.tmp34.v2, arm3.tmp34.v2)
outliers<-outliers.a[!is.na(outliers.a[,2]),]
}
outliers.out<-data.frame(result.loop, outliers)
print(result.loop)
print(table(outliers.out$Site, outliers.out$extreme.outlier))
tmp.extreme<-rbind(tmp.extreme, outliers.out[outliers.out$extreme.outlier==T,])
print(datatable(outliers.out, rownames=F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('excel', "csv"))))
write.csv(outliers.out, paste(result.loop,"outliers.csv", sep="_"), row.names=F, quote=F)
}
##if(remove.ext.outliers==T){zinc<-zinc[!(zinc$Barcode %in% outliers[outliers$extreme.outlier==T, "Barcode"]),]}
dim(tmp.extreme[!duplicated(tmp.extreme$Subject_ID),])
tmp<-c()
data.file2=zinc
for(result.loop in c("Result.Zn", "Result.AGP", "Result.CRP", "Result.Albumin")){
for(site.loop in names(table(data.file2$Site))){
data.tmp<-data.file2[data.file2$Site==site.loop,]
data.tmp$Result.numeric<-as.numeric(data.tmp[,result.loop])
tmp.a<-data.frame(result=result.loop, site=site.loop, t(c(summary(data.tmp$Result.numeric))))
if(ncol(tmp.a)==8) {tmp.a=data.frame(tmp.a, NA.s=0)}
SD=sqrt(var(data.tmp$Result.numeric, na.rm=T))
N=length(data.tmp[!is.na(data.tmp$Result.numeric),"Result.numeric"])
mean<-mean(data.tmp$Result.numeric, na.rm=T)
tmp<-rbind(tmp, data.frame(tmp.a[,1:2], N=N, round(tmp.a[,3:ncol(tmp.a)],3), stdev=round(SD,digits=3), lower.95CI=round(mean-1.96*SD/sqrt(N), 3), upper.95CI=round(mean+1.96*SD/sqrt(N), 3)))
}}
datatable(tmp, rownames=F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('excel', "csv")))
data.file2=zinc
for(result.loop in c("Result.Zn", "Result.AGP", "Result.CRP", "Result.Albumin")){
for(site.loop in names(table(data.file2$Site))){
tmp<-c()
for(arm.loop in names(table(data.file2$Arm))){
for(timepoint.loop in names(table(data.file2$Timepoint))){
if(arm.loop==3 & (timepoint.loop=="12 Weeks" | site.loop==8)){next}
data.tmp<-data.file2[data.file2$Site==site.loop & data.file2$Arm==arm.loop & data.file2$Timepoint==timepoint.loop,]
data.tmp$Result.numeric<-as.numeric(data.tmp[,result.loop])
tmp.a<-data.frame(result=result.loop, site=site.loop, arm=arm.loop, timepoint=timepoint.loop, t(c(summary(data.tmp$Result.numeric))))
if(ncol(tmp.a)==10) {tmp.a=data.frame(tmp.a, NA.s=0)}
SD=sqrt(var(data.tmp$Result.numeric, na.rm=T))
N=length(data.tmp[!is.na(data.tmp$Result.numeric),"Result.numeric"])
mean<-mean(data.tmp$Result.numeric, na.rm=T)
tmp<-rbind(tmp, data.frame(tmp.a[,1:4], N=N, round(tmp.a[,5:ncol(tmp.a)],3), stdev=round(SD,digits=3), lower.95CI=round(mean-1.96*SD/sqrt(N), 3), upper.95CI=round(mean+1.96*SD/sqrt(N), 3)))
print(ggplot(data.tmp,aes(x=Result.numeric)) +
geom_histogram(aes(y=..density..), alpha=0.5, color="black") + ggtitle(paste(result.loop, ": Site", site.loop, ", Arm", arm.loop, ", Timepoint", timepoint.loop)) + xlab(result.loop))
}}
print(datatable(tmp, rownames=F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('excel', "csv"))))
}}
temp.emmeans.out<-temp.comp.out<-overall.out<-c()
for(timepoint.loop in names(table(zinc$Timepoint))){
temp<-glm(as.numeric(Result.Zn)~as.factor(Site) + as.factor(Arm), data=zinc[zinc$Timepoint==timepoint.loop,])
temp.nested<-glm(as.numeric(Result.Zn)~as.factor(Site), data=zinc[zinc$Timepoint==timepoint.loop,])
zinc.tmp<- zinc[zinc$Timepoint==timepoint.loop,c("Site", "Arm", "Result.CRP", "Result.AGP", "Result.Zn")]
temp.crp.agp<-glm(as.numeric(Result.Zn)~as.factor(Site) + Result.CRP + Result.AGP + as.factor(Arm), data=zinc.tmp[complete.cases(zinc.tmp),])
temp.crp.agp.nested<-glm(as.numeric(Result.Zn)~as.factor(Site) + Result.CRP + Result.AGP, data=zinc.tmp[complete.cases(zinc.tmp),])
overall.out<-rbind(overall.out, data.frame(outcome="Zn", site="ALL", timepoint=timepoint.loop, pval=scientific(anova(temp.nested, temp, test="Chisq")$"Pr(>Chi)"[2], 4), pval.crp.agp.adj=scientific(anova(temp.crp.agp.nested, temp.crp.agp, test="Chisq")$"Pr(>Chi)"[2], 4)))
## Tukey adjustment for multiple testing was used ##
temp.lsmeans<-emmeans(temp, pairwise~as.factor(Arm))
upper<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])+1.96*as.numeric(x[3]), 4)})
lower<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])-1.96*as.numeric(x[3]), 4)})
temp.lsmeans.crp.agp<-emmeans(temp.crp.agp, pairwise~as.factor(Arm))
upper.crp.agp<-apply(data.frame(temp.lsmeans.crp.agp$contrasts), 1, function(x){round(as.numeric(x[2])+1.96*as.numeric(x[3]), 4)})
lower.crp.agp<-apply(data.frame(temp.lsmeans.crp.agp$contrasts), 1, function(x){round(as.numeric(x[2])-1.96*as.numeric(x[3]), 4)})
temp2<-data.frame(data.frame(temp.lsmeans$contrasts)[,1], round(data.frame(temp.lsmeans$contrasts)[,2], 4), lower, upper, scientific(data.frame(temp.lsmeans$contrasts)[,6], 4), round(data.frame(temp.lsmeans.crp.agp$contrasts)[,2], 4), lower.crp.agp, upper.crp.agp, scientific(data.frame(temp.lsmeans.crp.agp$contrasts)[,6], 4))
names(temp2)<-c("comparison", "mean", "lower_95CI", "uppder_95CI", "pval", "mean.crp.agp", "lower_95CI.crp.agp", "uppder_95CI.crp.agp", "pval.crp.agp")
temp.comp.out<-rbind(temp.comp.out, data.frame(outcome="Zn", site="ALL", timepoint=timepoint.loop, temp2))
temp.emmeans.out<-rbind(temp.emmeans.out, data.frame(outcome="Zn", site="ALL",timepoint=timepoint.loop,Arm=data.frame(temp.lsmeans$emmeans)[,1],adj.mean=round(data.frame(temp.lsmeans$emmeans)[,2], 4), lowerCI=round(data.frame(temp.lsmeans$emmeans)[,5], 4), upperCI=round(data.frame(temp.lsmeans$emmeans)[,6], 4), adj.mean.crp.agp=round(data.frame(temp.lsmeans.crp.agp$emmeans)[,2], 4), lowerCI.crp.agp=round(data.frame(temp.lsmeans.crp.agp$emmeans)[,5], 4), upperCI.crp.agp=round(data.frame(temp.lsmeans.crp.agp$emmeans)[,6], 4)))
################ by site  #################
for(site.loop in names(table(zinc$Site))){
temp<-glm(as.numeric(Result.Zn)~as.factor(Arm), data=zinc[zinc$Site==site.loop & zinc$Timepoint==timepoint.loop,])
temp.nested<-glm(as.numeric(Result.Zn)~1, data=zinc[zinc$Site==site.loop & zinc$Timepoint==timepoint.loop,])
zinc.tmp<- zinc[zinc$Site==site.loop & zinc$Timepoint==timepoint.loop,c("Site", "Arm", "Result.CRP", "Result.AGP", "Result.Zn")]
temp.crp.agp<-glm(as.numeric(Result.Zn)~ as.factor(Arm) + Result.CRP + Result.AGP, data=zinc.tmp[complete.cases(zinc.tmp),])
temp.crp.agp.nested<-glm(as.numeric(Result.Zn)~Result.CRP + Result.AGP, data=zinc.tmp[complete.cases(zinc.tmp),])
overall.out<-rbind(overall.out, data.frame(outcome="Zn", site=site.loop, timepoint=timepoint.loop, pval=scientific(anova(temp.nested, temp, test="Chisq")$"Pr(>Chi)"[2], 4), pval.crp.agp.adj=scientific(anova(temp.crp.agp.nested, temp.crp.agp, test="Chisq")$"Pr(>Chi)"[2], 4)))
## Tukey adjustment for multiple testing was used ##
temp.lsmeans<-emmeans(temp, pairwise~as.factor(Arm))
upper<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])+1.96*as.numeric(x[3]), 4)})
lower<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])-1.96*as.numeric(x[3]), 4)})
temp.lsmeans.crp.agp<-emmeans(temp.crp.agp, pairwise~as.factor(Arm))
upper.crp.agp<-apply(data.frame(temp.lsmeans.crp.agp$contrasts), 1, function(x){round(as.numeric(x[2])+1.96*as.numeric(x[3]), 4)})
lower.crp.agp<-apply(data.frame(temp.lsmeans.crp.agp$contrasts), 1, function(x){round(as.numeric(x[2])-1.96*as.numeric(x[3]), 4)})
temp2<-data.frame(data.frame(temp.lsmeans$contrasts)[,1], round(data.frame(temp.lsmeans$contrasts)[,2], 4), lower, upper, scientific(data.frame(temp.lsmeans$contrasts)[,6], 4), round(data.frame(temp.lsmeans.crp.agp$contrasts)[,2], 4), lower.crp.agp, upper.crp.agp, scientific(data.frame(temp.lsmeans.crp.agp$contrasts)[,6], 4))
names(temp2)<-c("comparison", "mean", "lower_95CI", "uppder_95CI", "pval", "mean.crp.agp", "lower_95CI.crp.agp", "uppder_95CI.crp.agp", "pval.crp.agp")
temp.comp.out<-rbind(temp.comp.out, data.frame(outcome="Zn", site=site.loop, timepoint=timepoint.loop, temp2))
temp.emmeans.out<-rbind(temp.emmeans.out, data.frame(outcome="Zn", site=site.loop,timepoint=timepoint.loop,Arm=data.frame(temp.lsmeans$emmeans)[,1],adj.mean=round(data.frame(temp.lsmeans$emmeans)[,2], 4), lowerCI=round(data.frame(temp.lsmeans$emmeans)[,5], 4), upperCI=round(data.frame(temp.lsmeans$emmeans)[,6], 4), adj.mean.crp.agp=round(data.frame(temp.lsmeans.crp.agp$emmeans)[,2], 4), lowerCI.crp.agp=round(data.frame(temp.lsmeans.crp.agp$emmeans)[,5], 4), upperCI.crp.agp=round(data.frame(temp.lsmeans.crp.agp$emmeans)[,6], 4)))
}}
datatable(overall.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
datatable(temp.comp.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
datatable(temp.emmeans.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
temp.emmeans.out<-temp.comp.out<-overall.out<-c()
for(timepoint.loop in names(table(zinc$Timepoint))){
temp<-glm(as.numeric(Result.Zn)~as.factor(Site) + as.factor(Arm), data=zinc[zinc$Timepoint==timepoint.loop,])
temp.nested<-glm(as.numeric(Result.Zn)~as.factor(Arm), data=zinc[zinc$Timepoint==timepoint.loop,])
overall.out<-rbind(overall.out, data.frame(outcome="Zn", timepoint=timepoint.loop, pval=scientific(anova(temp.nested, temp, test="Chisq")$"Pr(>Chi)"[2], 4)))
## Tukey adjustment for multiple testing was used ##
temp.lsmeans<-emmeans(temp, pairwise~as.factor(Site))
upper<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])+1.96*as.numeric(x[3]), 4)})
lower<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])-1.96*as.numeric(x[3]), 4)})
temp2<-data.frame(data.frame(temp.lsmeans$contrasts)[,1], round(data.frame(temp.lsmeans$contrasts)[,2], 4), lower, upper, scientific(data.frame(temp.lsmeans$contrasts)[,6], 4))
names(temp2)<-c("comparison", "mean", "lower_95CI", "uppder_95CI", "pval")
temp.comp.out<-rbind(temp.comp.out, data.frame(outcome="Zn",  timepoint=timepoint.loop, temp2))
temp.emmeans.out<-rbind(temp.emmeans.out, data.frame(outcome="Zn", timepoint=timepoint.loop,Site=data.frame(temp.lsmeans$emmeans)[,1],adj.mean=round(data.frame(temp.lsmeans$emmeans)[,2], 4), lowerCI=round(data.frame(temp.lsmeans$emmeans)[,5], 4), upperCI=round(data.frame(temp.lsmeans$emmeans)[,6], 4)))
}
datatable(overall.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
datatable(temp.comp.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
datatable(temp.emmeans.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
temp.lsmeans.out<-test.out<-overall.out<-c()
for(timepoint.loop in names(table(zinc$Timepoint))){
temp.data<-zinc[zinc$Timepoint==timepoint.loop,]
if(timepoint.loop=="12 Weeks"){ temp.data$hypozincemia<-ifelse(as.numeric(temp.data$Result.Zn)<56,1,0)}
if(timepoint.loop=="34 Weeks"){temp.data$hypozincemia<-ifelse(as.numeric(temp.data$Result.Zn)<50,1,0)}
temp<-multinom(hypozincemia~as.factor(Site) + as.factor(Arm), data=temp.data)
temp.nested<-multinom(hypozincemia~as.factor(Arm), data=temp.data)
overall.out<-rbind(overall.out, data.frame(outcome="Hypozincemia", timepoint=timepoint.loop, pval=scientific(anova(temp.nested, temp, test="Chisq")$"Pr(Chi)"[2], 4)))
temp.lsmeans<-data.frame(emmeans(temp, ~hypozincemia|as.factor(Site), mode="prob", data=temp.data))  #
temp.lsmeans$prob<-round(temp.lsmeans$prob, 3)
temp.lsmeans$SE<-round(temp.lsmeans$SE, 3)
temp.lsmeans$lower.CL<-round(temp.lsmeans$lower.CL, 3)
temp.lsmeans$upper.CL<-round(temp.lsmeans$upper.CL, 3)
temp.lsmeans.out<-rbind(temp.lsmeans.out, data.frame(timepoint=timepoint.loop,temp.lsmeans))
lsm<-emmeans(temp, ~as.factor(Site)|hypozincemia,mode="latent", data=temp.data)
cmp = contrast(lsm, method="pairwise", ref=1)
test = test(cmp, joint=TRUE, by="contrast")
test.out<-rbind(test.out, data.frame(timepoint=timepoint.loop,test[,1:4], p.value=scientific(test$p.value, 4)))
}
datatable(overall.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
datatable(temp.lsmeans.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
datatable(test.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
nrow(zinc)
zinc$bga.lt.37<-ifelse(zinc$bga_weeks<37,1,0)
nrow(zinc)
table(zinc$bga.lt.37)
table(zinc$bga.lt.37, zinc$Site)
temp.emmeans.out<-temp.comp.out<-overall.out<-c()
for(timepoint.loop in names(table(zinc$Timepoint))){
temp<-glm(as.numeric(Result.Zn)~bga.lt.37+as.factor(Site) + as.factor(Arm), data=zinc[zinc$Timepoint==timepoint.loop & !is.na(zinc$bga.lt.37),])
temp.nested<-glm(as.numeric(Result.Zn)~as.factor(Site) + as.factor(Arm), data=zinc[zinc$Timepoint==timepoint.loop & !is.na(zinc$bga.lt.37),])
overall.out<-rbind(overall.out, data.frame(outcome="Zn", site="ALL", timepoint=timepoint.loop, pval=scientific(anova(temp.nested, temp, test="Chisq")$"Pr(>Chi)"[2], 4)))
## Tukey adjustment for multiple testing was used ##
temp.lsmeans<-emmeans(temp, pairwise~bga.lt.37)
upper<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])+1.96*as.numeric(x[3]), 4)})
lower<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])-1.96*as.numeric(x[3]), 4)})
temp2<-data.frame(data.frame(temp.lsmeans$contrasts)[,1], round(data.frame(temp.lsmeans$contrasts)[,2], 4), lower, upper, scientific(data.frame(temp.lsmeans$contrasts)[,6], 4))
names(temp2)<-c("comparison", "mean", "lower_95CI", "uppder_95CI", "pval")
temp.comp.out<-rbind(temp.comp.out, data.frame(outcome="Zn", site="ALL", timepoint=timepoint.loop, temp2))
temp.emmeans.out<-rbind(temp.emmeans.out, data.frame(outcome="Zn", site="ALL",timepoint=timepoint.loop,bga.lt.37=data.frame(temp.lsmeans$emmeans)[,1],adj.mean=round(data.frame(temp.lsmeans$emmeans)[,2], 4), lowerCI=round(data.frame(temp.lsmeans$emmeans)[,5], 4), upperCI=round(data.frame(temp.lsmeans$emmeans)[,6], 4)))
################ by site  #################
for(site.loop in names(table(zinc$Site))){
temp<-glm(as.numeric(Result.Zn)~bga.lt.37+as.factor(Arm), data=zinc[zinc$Site==site.loop & zinc$Timepoint==timepoint.loop  & !is.na(zinc$bga.lt.37),])
temp.nested<-glm(as.numeric(Result.Zn)~as.factor(Arm), data=zinc[zinc$Site==site.loop & zinc$Timepoint==timepoint.loop  & !is.na(zinc$bga.lt.37),])
overall.out<-rbind(overall.out, data.frame(outcome="Zn", site=site.loop, timepoint=timepoint.loop, pval=scientific(anova(temp.nested, temp, test="Chisq")$"Pr(>Chi)"[2], 4)))
## Tukey adjustment for multiple testing was used ##
temp.lsmeans<-emmeans(temp, pairwise~bga.lt.37)
upper<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])+1.96*as.numeric(x[3]), 4)})
lower<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])-1.96*as.numeric(x[3]), 4)})
temp2<-data.frame(data.frame(temp.lsmeans$contrasts)[,1], round(data.frame(temp.lsmeans$contrasts)[,2], 4), lower, upper, scientific(data.frame(temp.lsmeans$contrasts)[,6], 4))
names(temp2)<-c("comparison", "mean", "lower_95CI", "uppder_95CI", "pval")
temp.comp.out<-rbind(temp.comp.out, data.frame(outcome="Zn", site=site.loop, timepoint=timepoint.loop, temp2))
temp.emmeans.out<-rbind(temp.emmeans.out, data.frame(outcome="Zn", site=site.loop,timepoint=timepoint.loop,bga.lt.37=data.frame(temp.lsmeans$emmeans)[,1],adj.mean=round(data.frame(temp.lsmeans$emmeans)[,2], 4), lowerCI=round(data.frame(temp.lsmeans$emmeans)[,5], 4), upperCI=round(data.frame(temp.lsmeans$emmeans)[,6], 4)))
}}
datatable(overall.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
datatable(temp.comp.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
datatable(temp.emmeans.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
summary(zinc[zinc$Timepoint=="12 Weeks", "Result.CRP"])
table(zinc[zinc$Timepoint=="12 Weeks", "Result.CRP"]>5)
summary(zinc[zinc$Timepoint=="34 Weeks", "Result.CRP"])
table(zinc[zinc$Timepoint=="34 Weeks", "Result.CRP"]>5)
summary(zinc[zinc$Timepoint=="34 Weeks", "Result.AGP"])
table(zinc[zinc$Timepoint=="34 Weeks", "Result.AGP"]>1)
summary(zinc[zinc$Timepoint=="34 Weeks", "Result.AGP"])
table(zinc[zinc$Timepoint=="34 Weeks", "Result.AGP"]>1)
p1<-ggplot(zinc.12weeks, aes(x=as.numeric(Result.Zn), y =as.numeric(Result.CRP))) +
geom_point() + geom_smooth(method="lm") + xlab("Zinc") + ylab("CRP") + ggtitle("12 weeks") + geom_hline(yintercept=5, linetype="dashed", color="darkred")
p1
p1<-ggplot(zinc.12weeks, aes(x=as.numeric(Result.Zn), y =as.numeric(Result.AGP))) +
geom_point() + geom_smooth(method="lm") + xlab("Zinc") + ylab("AGP") + ggtitle("12 weeks") + geom_hline(yintercept=1, linetype="dashed", color="darkred")
p1
p1<-ggplot(zinc.12weeks, aes(x=as.numeric(Result.AGP), y =as.numeric(Result.CRP))) +
geom_point() + geom_smooth(method="lm") + xlab("AGP") + ylab("CRP") + ggtitle("12 weeks") + geom_hline(yintercept=5, linetype="dashed", color="darkred") + geom_vline(xintercept=1, linetype="dashed", color="darkred")
p1
p1<-ggplot(zinc.34weeks, aes(x=as.numeric(Result.Zn), y =as.numeric(Result.CRP))) +
geom_point() + geom_smooth(method="lm") + xlab("Zinc") + ylab("CRP") + ggtitle("34 weeks") + geom_hline(yintercept=5, linetype="dashed", color="darkred")
p1
p1<-ggplot(zinc.34weeks, aes(x=as.numeric(Result.Zn), y =as.numeric(Result.AGP))) +
geom_point() + geom_smooth(method="lm") + xlab("Zinc") + ylab("AGP") + ggtitle("34 weeks") + geom_hline(yintercept=1, linetype="dashed", color="darkred")
p1
p1<-ggplot(zinc.34weeks, aes(x=as.numeric(Result.AGP), y =as.numeric(Result.CRP))) +
geom_point() + geom_smooth(method="lm") + xlab("AGP") + ylab("CRP") + ggtitle("34 weeks") + geom_vline(xintercept=1, linetype="dashed", color="darkred") + geom_hline(yintercept=5, linetype="dashed", color="darkred")
p1
temp.emmeans.out<-temp.comp.out<-overall.out<-c()
for(timepoint.loop in names(table(zinc$Timepoint))){
temp.data<-zinc[zinc$Timepoint==timepoint.loop,]
if(timepoint.loop=="12 Weeks"){ temp.data$high.crp<-ifelse(as.numeric(temp.data$Result.CRP)>5,1,0)
temp.data$high.agp<-ifelse(as.numeric(temp.data$Result.AGP)>1,1,0)}
if(timepoint.loop=="34 Weeks"){temp.data$high.crp<-ifelse(as.numeric(temp.data$Result.CRP)>5,1,0)
temp.data$high.agp<-ifelse(as.numeric(temp.data$Result.AGP)>1,1,0)}
temp.crp<-glm(as.numeric(Result.Zn)~as.factor(Site) + as.factor(Arm) + high.crp, data=temp.data)
temp.agp<-glm(as.numeric(Result.Zn)~as.factor(Site) + as.factor(Arm) + high.agp, data=temp.data)
temp.nested.crp<-glm(as.numeric(Result.Zn)~as.factor(Site) + as.factor(Arm), data=temp.data[!is.na(temp.data$high.crp),])
temp.nested.agp<-glm(as.numeric(Result.Zn)~as.factor(Site) + as.factor(Arm), data=temp.data[!is.na(temp.data$high.agp),])
overall.out<-rbind(overall.out, data.frame(predictor="CRP", site="ALL", timepoint=timepoint.loop, pval=scientific(anova(temp.nested.crp, temp.crp, test="Chisq")$"Pr(>Chi)"[2], 4)), data.frame(predictor="AGP", site="ALL", timepoint=timepoint.loop, pval=scientific(anova(temp.nested.agp, temp.agp, test="Chisq")$"Pr(>Chi)"[2], 4)))
##CRP##
## Tukey adjustment for multiple testing was used ##
temp.lsmeans<-emmeans(temp.crp, pairwise~as.factor(high.crp))
upper<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])+1.96*as.numeric(x[3]), 4)})
lower<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])-1.96*as.numeric(x[3]), 4)})
temp2<-data.frame(data.frame(temp.lsmeans$contrasts)[,1], round(data.frame(temp.lsmeans$contrasts)[,2], 4), lower, upper, scientific(data.frame(temp.lsmeans$contrasts)[,6], 4))
names(temp2)<-c("comparison", "mean", "lower_95CI", "uppder_95CI", "pval")
temp.comp.out<-rbind(temp.comp.out, data.frame(predictor="CRP", site="ALL", timepoint=timepoint.loop, temp2))
temp.emmeans.out<-rbind(temp.emmeans.out, data.frame(predictor="CRP", site="ALL",timepoint=timepoint.loop,Arm=data.frame(temp.lsmeans$emmeans)[,1],adj.mean=round(data.frame(temp.lsmeans$emmeans)[,2], 4), lowerCI=round(data.frame(temp.lsmeans$emmeans)[,5], 4), upperCI=round(data.frame(temp.lsmeans$emmeans)[,6], 4)))
##AGP##
## Tukey adjustment for multiple testing was used ##
temp.lsmeans<-emmeans(temp.agp, pairwise~as.factor(high.agp))
upper<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])+1.96*as.numeric(x[3]), 4)})
lower<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])-1.96*as.numeric(x[3]), 4)})
temp2<-data.frame(data.frame(temp.lsmeans$contrasts)[,1], round(data.frame(temp.lsmeans$contrasts)[,2], 4), lower, upper, scientific(data.frame(temp.lsmeans$contrasts)[,6], 4))
names(temp2)<-c("comparison", "mean", "lower_95CI", "uppder_95CI", "pval")
temp.comp.out<-rbind(temp.comp.out, data.frame(predictor="AGP", site="ALL", timepoint=timepoint.loop, temp2))
temp.emmeans.out<-rbind(temp.emmeans.out, data.frame(predictor="AGP", site="ALL",timepoint=timepoint.loop,Arm=data.frame(temp.lsmeans$emmeans)[,1],adj.mean=round(data.frame(temp.lsmeans$emmeans)[,2], 4), lowerCI=round(data.frame(temp.lsmeans$emmeans)[,5], 4), upperCI=round(data.frame(temp.lsmeans$emmeans)[,6], 4)))
################################### by site  #################
for(site.loop in names(table(zinc$Site))){
temp.data2<-temp.data[temp.data$Site==site.loop,]
temp.crp<-glm(as.numeric(Result.Zn)~as.factor(Arm) + high.crp, data=temp.data2)
temp.agp<-glm(as.numeric(Result.Zn)~ as.factor(Arm) + high.agp, data=temp.data2)
temp.nested.crp<-glm(as.numeric(Result.Zn)~as.factor(Arm), data=temp.data2[!is.na(temp.data2$high.crp),])
temp.nested.agp<-glm(as.numeric(Result.Zn)~as.factor(Arm), data=temp.data2[!is.na(temp.data2$high.agp),])
overall.out<-rbind(overall.out, data.frame(predictor="CRP", site=site.loop, timepoint=timepoint.loop, pval=scientific(anova(temp.nested.crp, temp.crp, test="Chisq")$"Pr(>Chi)"[2], 4)), data.frame(predictor="AGP", site=site.loop, timepoint=timepoint.loop, pval=scientific(anova(temp.nested.agp, temp.agp, test="Chisq")$"Pr(>Chi)"[2], 4)))
##CRP##
## Tukey adjustment for multiple testing was used ##
temp.lsmeans<-emmeans(temp.crp, pairwise~as.factor(high.crp))
upper<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])+1.96*as.numeric(x[3]), 4)})
lower<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])-1.96*as.numeric(x[3]), 4)})
temp2<-data.frame(data.frame(temp.lsmeans$contrasts)[,1], round(data.frame(temp.lsmeans$contrasts)[,2], 4), lower, upper, scientific(data.frame(temp.lsmeans$contrasts)[,6], 4))
names(temp2)<-c("comparison", "mean", "lower_95CI", "uppder_95CI", "pval")
temp.comp.out<-rbind(temp.comp.out, data.frame(predictor="CRP", site=site.loop, timepoint=timepoint.loop, temp2))
temp.emmeans.out<-rbind(temp.emmeans.out, data.frame(predictor="CRP", site=site.loop,timepoint=timepoint.loop,Arm=data.frame(temp.lsmeans$emmeans)[,1],adj.mean=round(data.frame(temp.lsmeans$emmeans)[,2], 4), lowerCI=round(data.frame(temp.lsmeans$emmeans)[,5], 4), upperCI=round(data.frame(temp.lsmeans$emmeans)[,6], 4)))
##AGP##
## Tukey adjustment for multiple testing was used ##
temp.lsmeans<-emmeans(temp.agp, pairwise~as.factor(high.agp))
upper<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])+1.96*as.numeric(x[3]), 4)})
lower<-apply(data.frame(temp.lsmeans$contrasts), 1, function(x){round(as.numeric(x[2])-1.96*as.numeric(x[3]), 4)})
temp2<-data.frame(data.frame(temp.lsmeans$contrasts)[,1], round(data.frame(temp.lsmeans$contrasts)[,2], 4), lower, upper, scientific(data.frame(temp.lsmeans$contrasts)[,6], 4))
names(temp2)<-c("comparison", "mean", "lower_95CI", "uppder_95CI", "pval")
temp.comp.out<-rbind(temp.comp.out, data.frame(predictor="AGP", site=site.loop, timepoint=timepoint.loop, temp2))
temp.emmeans.out<-rbind(temp.emmeans.out, data.frame(predictor="AGP", site=site.loop,timepoint=timepoint.loop,Arm=data.frame(temp.lsmeans$emmeans)[,1],adj.mean=round(data.frame(temp.lsmeans$emmeans)[,2], 4), lowerCI=round(data.frame(temp.lsmeans$emmeans)[,5], 4), upperCI=round(data.frame(temp.lsmeans$emmeans)[,6], 4)))
}}
datatable(overall.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
datatable(temp.comp.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
datatable(temp.emmeans.out, rownames=F, extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = c('excel', "csv")))
p1<-ggplot(zinc, aes(x=as.numeric(Result.Zn), y =bga_weeks)) +
geom_point() + geom_smooth(method="lm") + xlab("Zinc")
p1
library(psych)
pairs.panels(zinc[,c("Result.Zn", "Result.AGP", "Result.Albumin", "Result.CRP")], hist.col = "#00AFBB",
density = TRUE)
zinc.12weeks$hypozincemia<-ifelse(zinc.12weeks$Result.Zn<56,T,F)
CrossTable(as.numeric(zinc.12weeks$Result.Zn)<56, prop.r=F, prop.t=F, prop.chisq=F)
CrossTable(zinc.12weeks$Arm, as.numeric(zinc.12weeks$Result.Zn)<56, prop.r=T, prop.t=F, prop.chisq=F, dnn=c("Arm", "Hypozincemia"))
CrossTable(zinc.12weeks$Site, as.numeric(zinc.12weeks$Result.Zn)<56, prop.r=T, prop.t=F, prop.chisq=F, dnn=c("Arm", "Hypozincemia"))
CrossTable(zinc.12weeks[zinc.12weeks$Site==6,"Arm"], as.numeric(zinc.12weeks[zinc.12weeks$Site==6,"Result.Zn"])<56, prop.r=T, prop.t=F, prop.chisq=F, dnn=c("Arm", "Hypozincemia"))
CrossTable(zinc.12weeks[zinc.12weeks$Site==8,"Arm"], as.numeric(zinc.12weeks[zinc.12weeks$Site==8,"Result.Zn"])<56, prop.r=T, prop.t=F, prop.chisq=F, dnn=c("Arm", "Hypozincemia"))
CrossTable(zinc.12weeks[zinc.12weeks$Site==9,"Arm"], as.numeric(zinc.12weeks[zinc.12weeks$Site==9,"Result.Zn"])<56, prop.r=T, prop.t=F, prop.chisq=F, dnn=c("Arm", "Hypozincemia"))
zinc.34weeks$hypozincemia<-ifelse(zinc.34weeks$Result.Zn<50,T,F)
CrossTable(as.numeric(zinc.34weeks$Result.Zn)<50, prop.r=F, prop.t=F, prop.chisq=F)
CrossTable(zinc.34weeks$Arm, as.numeric(zinc.34weeks$Result.Zn)<50, prop.r=T, prop.t=F, prop.chisq=F, dnn=c("Arm", "Hypozincemia"))
CrossTable(zinc.34weeks$Site, as.numeric(zinc.34weeks$Result.Zn)<50, prop.r=T, prop.t=F, prop.chisq=F, dnn=c("Arm", "Hypozincemia"))
CrossTable(zinc.34weeks[zinc.34weeks$Site==6,"Arm"], as.numeric(zinc.34weeks[zinc.34weeks$Site==6,"Result.Zn"])<50, prop.r=T, prop.t=F, prop.chisq=F, dnn=c("Arm", "Hypozincemia"))
CrossTable(zinc.34weeks[zinc.34weeks$Site==8,"Arm"], as.numeric(zinc.34weeks[zinc.34weeks$Site==8,"Result.Zn"])<50, prop.r=T, prop.t=F, prop.chisq=F, dnn=c("Arm", "Hypozincemia"))
CrossTable(zinc.34weeks[zinc.34weeks$Site==9,"Arm"], as.numeric(zinc.34weeks[zinc.34weeks$Site==9,"Result.Zn"])<50, prop.r=T, prop.t=F, prop.chisq=F, dnn=c("Arm", "Hypozincemia"))
summary(as.numeric(zinc$Result.Zn.Corrected))
table(!is.na(as.numeric(zinc$Result.Zn.Corrected)))
summary(as.numeric(zinc$Result.AGP))
summary(as.numeric(zinc$Result.Albumin))
summary(as.numeric(zinc$Result.CRP))
table(zinc$Arm, zinc$Site, zinc$Timepoint)
zinc2<-zinc[!is.na(as.numeric(zinc$Result.Zn)),]
table(zinc2$Arm, zinc2$Site, zinc2$Timepoint)
for(site.loop in c(6,8,9)){
for(birth.outcome in c("ga_zlen_INTG_24h", "ga_zwei_INTG_24h", "ga_zhc_INTG_24h", "bga_weeks")) {
tmp<-zinc.12weeks[zinc.12weeks$Site==site.loop,c("Subject_ID", birth.outcome)]
names(tmp)<-c("Subject_ID", "birth.outcome")
print(ggplot(tmp,aes(x=as.numeric(birth.outcome))) +
geom_histogram(aes(y=..density..), alpha=0.5, color="black") +
geom_density(alpha=0.4, color="#E69F00", fill="#E69F00") + ggtitle(paste(site.loop, birth.outcome)))
}}
overall.out<-c()
for(birth.outcome in c("ga_zlen_INTG_24h", "ga_zwei_INTG_24h", "ga_zhc_INTG_24h", "bga_weeks")) {
##  ADD IN OVERALL SITES ##
for(site.loop in c(6,8,9)){
tmp<-zinc.12weeks[zinc.12weeks$Site==site.loop,]
tmp$birth.outcome<-tmp[,birth.outcome]
temp<-glm(as.numeric(birth.outcome)~ as.factor(cluster) + as.factor(Arm) + hypozincemia, data=tmp)
temp.lsmeans<-as.data.frame(emmeans(temp, pairwise~hypozincemia, data=tmp)$emmeans)
overall.out<-rbind(overall.out, data.frame(birth.outcome=birth.outcome, site=as.character(site.loop), cluster="yes",pval=scientific(summary(temp)$coefficients[which(names(temp$coefficients)=="hypozincemiaTRUE"),4], 4), mean_hypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==TRUE,"emmean"],2),LCL_hypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==TRUE,"asymp.LCL"],2),UCL_hypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==TRUE,"asymp.UCL"],2), mean_NOThypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==FALSE,"emmean"],2),LCL_NOThypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==F,"asymp.LCL"],2),UCL_NOThypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==F,"asymp.UCL"],2)))
temp<-glm(as.numeric(birth.outcome)~ as.factor(Arm) + hypozincemia, data=tmp)
temp.lsmeans<-as.data.frame(emmeans(temp, pairwise~hypozincemia, data=tmp)$emmeans)
overall.out<-rbind(overall.out, data.frame(birth.outcome=birth.outcome, site=as.character(site.loop), cluster="no",pval=scientific(summary(temp)$coefficients[which(names(temp$coefficients)=="hypozincemiaTRUE"),4], 4), mean_hypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==TRUE,"emmean"],2),LCL_hypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==TRUE,"asymp.LCL"],2),UCL_hypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==TRUE,"asymp.UCL"],2), mean_NOThypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==FALSE,"emmean"],2),LCL_NOThypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==F,"asymp.LCL"],2),UCL_NOThypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==F,"asymp.UCL"],2)))
}}
datatable(overall.out, rownames=F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('excel', "csv")))
overall.out<-c()
for(site.loop in c(6,8,9)){
temp<-glm(as.numeric(bga_weeks)~ as.factor(cluster) + as.factor(Arm) + as.numeric(Result.Zn), data=zinc.12weeks[zinc.12weeks$Site==site.loop,])
overall.out<-rbind(overall.out, data.frame(site=as.character(site.loop), cluster="yes",pval=scientific(summary(temp)$coefficients[which(names(temp$coefficients)=="as.numeric(Result.Zn)"),4], 4),effect=round(summary(temp)$coefficients[which(names(temp$coefficients)=="as.numeric(Result.Zn)"),1],4)))
temp<-glm(as.numeric(bga_weeks)~as.factor(Arm) + as.numeric(Result.Zn), data=zinc.12weeks[zinc.12weeks$Site==site.loop,])
overall.out<-rbind(overall.out, data.frame(site=as.character(site.loop), cluster="no",pval=scientific(summary(temp)$coefficients[which(names(temp$coefficients)=="as.numeric(Result.Zn)"),4], 4),effect=round(summary(temp)$coefficients[which(names(temp$coefficients)=="as.numeric(Result.Zn)"),1],4)))
}
datatable(overall.out, rownames=F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('excel', "csv")))
for(site.loop in c(6,8,9)){
for(birth.outcome in c("ga_zlen_INTG_24h", "ga_zwei_INTG_24h", "ga_zhc_INTG_24h", "bga_weeks")) {
tmp<-zinc.12weeks[zinc.34weeks$Site==site.loop,c("Subject_ID", birth.outcome)]
names(tmp)<-c("Subject_ID", "birth.outcome")
print(ggplot(tmp,aes(x=as.numeric(birth.outcome))) +
geom_histogram(aes(y=..density..), alpha=0.5, color="black") +
geom_density(alpha=0.4, color="#E69F00", fill="#E69F00") + ggtitle(paste(site.loop, birth.outcome)))
}}
overall.out<-c()
for(birth.outcome in c("ga_zlen_INTG_24h", "ga_zwei_INTG_24h", "ga_zhc_INTG_24h", "bga_weeks")) {
##  ADD IN OVERALL SITES ##
for(site.loop in c(6,8,9)){
tmp<-zinc.34weeks[zinc.34weeks$Site==site.loop,]
tmp$birth.outcome<-tmp[,birth.outcome]
temp<-glm(as.numeric(birth.outcome)~ as.factor(cluster) + as.factor(Arm) + hypozincemia, data=tmp)
temp.lsmeans<-as.data.frame(emmeans(temp, pairwise~hypozincemia, data=tmp)$emmeans)
overall.out<-rbind(overall.out, data.frame(birth.outcome=birth.outcome, site=as.character(site.loop), cluster="yes",pval=scientific(summary(temp)$coefficients[which(names(temp$coefficients)=="hypozincemiaTRUE"),4], 4), mean_hypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==TRUE,"emmean"],2),LCL_hypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==TRUE,"asymp.LCL"],2),UCL_hypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==TRUE,"asymp.UCL"],2), mean_NOThypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==FALSE,"emmean"],2),LCL_NOThypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==F,"asymp.LCL"],2),UCL_NOThypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==F,"asymp.UCL"],2)))
temp<-glm(as.numeric(birth.outcome)~ as.factor(Arm) + hypozincemia, data=tmp)
temp.lsmeans<-as.data.frame(emmeans(temp, pairwise~hypozincemia, data=tmp)$emmeans)
overall.out<-rbind(overall.out, data.frame(birth.outcome=birth.outcome, site=as.character(site.loop), cluster="no",pval=scientific(summary(temp)$coefficients[which(names(temp$coefficients)=="hypozincemiaTRUE"),4], 4), mean_hypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==TRUE,"emmean"],2),LCL_hypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==TRUE,"asymp.LCL"],2),UCL_hypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==TRUE,"asymp.UCL"],2), mean_NOThypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==FALSE,"emmean"],2),LCL_NOThypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==F,"asymp.LCL"],2),UCL_NOThypo=round(temp.lsmeans[temp.lsmeans$hypozincemia==F,"asymp.UCL"],2)))
}}
datatable(overall.out, rownames=F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('excel', "csv")))
overall.out<-c()
for(site.loop in c(6,8,9)){
temp<-glm(as.numeric(bga_weeks)~ as.factor(cluster) + as.factor(Arm) + as.numeric(Result.Zn), data=zinc.34weeks[zinc.34weeks$Site==site.loop,])
overall.out<-rbind(overall.out, data.frame(site=as.character(site.loop), cluster="yes",pval=scientific(summary(temp)$coefficients[which(names(temp$coefficients)=="as.numeric(Result.Zn)"),4], 4),effect=round(summary(temp)$coefficients[which(names(temp$coefficients)=="as.numeric(Result.Zn)"),1],4)))
temp<-glm(as.numeric(bga_weeks)~as.factor(Arm) + as.numeric(Result.Zn), data=zinc.34weeks[zinc.34weeks$Site==site.loop,])
overall.out<-rbind(overall.out, data.frame(site=as.character(site.loop), cluster="no",pval=scientific(summary(temp)$coefficients[which(names(temp$coefficients)=="as.numeric(Result.Zn)"),4], 4),effect=round(summary(temp)$coefficients[which(names(temp$coefficients)=="as.numeric(Result.Zn)"),1],4)))
}
datatable(overall.out, rownames=F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('excel', "csv")))
p1<-ggplot(zinc, aes(x=as.numeric(Result.Zn), y =as.numeric(bga_weeks))) +
geom_point() + geom_smooth(method="lm") + xlab("Zinc")
p1
library(blogdown)
install.packages("blogdown”)
""
''
"
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
library(blogdown)
library(blogdown)
blogdown::serve_site()
blogdown::install_hugo(force = TRUE)
blogdown::serve_site()
blogdown::serve_site()
error()
errors()
blogdown::serve_site()
blogdown::serve_site()
library(blogdown)
blogdown::serve_site()
blogdown::install_hugo(force = TRUE)
blogdown::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
7*15
68+11+42+5
blogdown:::serve_site()
build_site()
build_site()
library(blogdown)
build_site()
hugo
hugo version
hugo [version]
library(hugo)
hugo_version
hugo_version[]
hugo_version()
build_site
build_site()
library(blogdown)
build_site()
build_site()
build_site()
build_site()
hugo_version
hugo_version()
library(blogdown)
build_site()
blogdown::server_site()
blogdown::build_site()
blogdown::build_site()
library(blogdown)
build_site()
packageVersion("blogdown")
blogdown::hugo_version()
uninstall(hugo_available())
build_site()
build_site()
library(blogdown)
build_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(blogdown)
blogdown:::serve_site()
errors()
errors
error
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::check_gitignore()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::hugo_build()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::check_gitignore()
blogdown:::serve_site()
blogdown::build_site()
blogdown::check_gitignore()
blogdown::build_site()
blogdown::check_gitignore()
blogdown::build_site()
blogdown::check_gitignore()
blogdown:::serve_site()
